openapi: 3.0.3
info:
  title: 'Kargho-DOT API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8009'
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'Use the login endpoint to obtain a Bearer token. Include it as `Authorization: Bearer {token}` in your requests.'
security:
  -
    default: []
paths:
  /api/login:
    post:
      summary: 'Login and get token'
      operationId: loginAndGetToken
      description: 'Authenticate a user and return a Bearer token for API usage.'
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                properties:
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid credentials'
                properties:
                  message:
                    type: string
                    example: 'Invalid credentials'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email."
                  example: user@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password."
                  example: secret
                  nullable: false
              required:
                - email
                - password
  /api/logout:
    post:
      summary: 'Logout (revoke token)'
      operationId: logoutrevokeToken
      description: "Revoke the current user's token. Requires authentication."
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Logged out'
                properties:
                  message:
                    type: string
                    example: 'Logged out'
      tags:
        - Authentication
  /api/dots:
    get:
      summary: 'List DOTs'
      operationId: listDOTs
      description: 'Get a paginated list of DOTs with filters.'
      parameters:
        -
          in: query
          name: per_page
          description: 'Number of results per page.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Number of results per page.'
            example: 10
            nullable: false
        -
          in: query
          name: dot
          description: 'DOT number.'
          example: 123456
          required: false
          schema:
            type: integer
            description: 'DOT number.'
            example: 123456
            nullable: false
        -
          in: query
          name: ein
          description: EIN.
          example: 12-3456789
          required: false
          schema:
            type: string
            description: EIN.
            example: 12-3456789
            nullable: false
        -
          in: query
          name: vin
          description: VIN.
          example: 1HGCM82633A004352
          required: false
          schema:
            type: string
            description: VIN.
            example: 1HGCM82633A004352
            nullable: false
        -
          in: query
          name: license
          description: License.
          example: ABC123
          required: false
          schema:
            type: string
            description: License.
            example: ABC123
            nullable: false
        -
          in: query
          name: mc
          description: MC.
          example: MC123456
          required: false
          schema:
            type: string
            description: MC.
            example: MC123456
            nullable: false
        -
          in: query
          name: company_name
          description: 'Company Name.'
          example: 'Acme Inc'
          required: false
          schema:
            type: string
            description: 'Company Name.'
            example: 'Acme Inc'
            nullable: false
        -
          in: query
          name: company_owner
          description: 'Company Owner.'
          example: 'John Doe'
          required: false
          schema:
            type: string
            description: 'Company Owner.'
            example: 'John Doe'
            nullable: false
        -
          in: query
          name: dba
          description: DBA.
          example: 'Acme Logistics'
          required: false
          schema:
            type: string
            description: DBA.
            example: 'Acme Logistics'
            nullable: false
        -
          in: query
          name: city
          description: City.
          example: Miami
          required: false
          schema:
            type: string
            description: City.
            example: Miami
            nullable: false
        -
          in: query
          name: state
          description: State.
          example: FL
          required: false
          schema:
            type: string
            description: State.
            example: FL
            nullable: false
        -
          in: query
          name: inspections
          description: 'Inspection type.'
          example: Safety
          required: false
          schema:
            type: string
            description: 'Inspection type.'
            example: Safety
            nullable: false
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'DOTs list retrieved successfully.'
                  data: {  }
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'DOTs list retrieved successfully.'
                  data:
                    type: object
                    properties: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 73
                  nullable: false
                dot:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                ein:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: opfuudtdsufvyvddqamni
                  nullable: false
                vin:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: ihfqcoynlazghdtqtqxba
                  nullable: false
                license:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: jwbpilpmufinllwloauyd
                  nullable: false
                mc:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: lsmsjuryvojcybzvrbyic
                  nullable: false
                company_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kznkygloigmkwxphlvazj
                  nullable: false
                company_owner:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rcnfbaqywuxhgjjmzuxju
                  nullable: false
                dba:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bqouzswiwxtrkimfcatbx
                  nullable: false
                city:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: spzmrazsroyjpxmqesedy
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 32 characters.'
                  example: ghenqcopwvownkbamlnfn
                  nullable: false
                inspections:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: gefbeilfzsyuxoezbdtab
                  nullable: false
  '/api/dots/{dotnumber}':
    get:
      summary: 'Show DOT detail'
      operationId: showDOTDetail
      description: 'Get detail for a specific DOT number.'
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'DOT detail retrieved successfully.'
                  data: {  }
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'DOT detail retrieved successfully.'
                  data:
                    type: object
                    properties: {  }
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'DOT not found.'
                  data: null
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'DOT not found.'
                  data:
                    type: string
                    example: null
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: dotnumber
        description: 'DOT number.'
        example: 123456
        required: true
        schema:
          type: integer
  '/api/kargho/onboard-from-fmcsa/{dotnumber}':
    post:
      summary: 'Onboard a DOT from FMCSA into KarghoUS'
      operationId: onboardADOTFromFMCSAIntoKarghoUS
      description: 'This endpoint triggers the onboarding process for a DOT number from FMCSA, using the provided password and country ID. The DOT number is passed as a URL parameter, and the password and country ID are sent in the request body. The process will call a stored procedure in the KarghoUS database. Returns a success message if onboarding is successful, or an error message if validation fails or the DOT is not found.'
      parameters:
        -
          in: header
          name: Accept-Language
          description: ''
          example: en
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Onboarding executed successfully.'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Onboarding executed successfully.'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation error.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation error.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'DOT not found in FMCSA.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'DOT not found in FMCSA.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: Password.
                  example: '123456'
                  nullable: false
                idcountry:
                  type: integer
                  description: 'Country ID (1=USA, 2=ARG).'
                  example: 1
                  nullable: false
              required:
                - password
                - idcountry
    parameters:
      -
        in: path
        name: dotnumber
        description: 'DOT number.'
        example: '123456'
        required: true
        schema:
          type: string
